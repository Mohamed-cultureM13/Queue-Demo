@{
    ViewBag.Title = "Index";
}


@section Scripts {

@Scripts.Render("~/bundles/chart")
@Scripts.Render("~/bundles/signalr")

<script src="/signalr/hubs" type="text/javascript"></script>
<script type="text/javascript">
    var sizeChart;
    var waitChart;
    var sizeStack = [], time = (new Date()).getTime(), i;
    var waitStack = [], time = (new Date()).getTime(), i;

    var maxStackSize = 20;

    $(function () {
        var queueHub = $.connection.queue;

        queueHub.client.reportQueueSize = function (currentSize) {

            //if (sizeStack.count>=maxStackSize){
            //    sizeStack[0].pop();
            //}
                
            sizeStack.push({
                x: (new Date()).getTime(),
                y: parseInt(currentSize)
            });

            sizeChart.get('sizeData').setData(sizeStack);

            $('#currentSize').text(currentSize);
        };

        //reportQueueSize = function (waitTime) {

            //if (waitStack.count >= maxStackSize) {
            //    waitStack[0].pop();
            //}

//        };

        $.connection.hub.logging = true;
        $.connection.hub.start().done(function () {

            var timer = setInterval(function () {

                console.log('starting avg wait callback');

                queueHub.server.reportAverageWait().done(function (result) {

                    console.log('    callback complete: ' + result);

                    var point = {
                        x: (new Date()).getTime(),
                        y: parseInt(result)
                    };

                    waitStack.push(point);

                    console.log('    point.x: ' + point.x);
                    console.log('    point.y: ' + point.y);

                    console.log('    waitstack: ' + waitStack.length);

                    waitChart.get('waitData').setData(waitStack);

                    $('#waitTime').text(result);
                    $('#waitTimeStatus').text('the last value was: ' + result);
                }).fail(function (e) {

                    console.log('    callback fail: ' + e);

                    clearInterval(timer);  //stop the interval
                    $('#waitTimeStatus').text(e);
                });

            }, 3000);
        });

        sizeChart = new Highcharts.Chart({
            chart: {
                renderTo: 'sizeChart',
                type: 'spline'
            },
            title : null,
            xAxis: {
                type: 'datetime',
                tickPixelInterval: 150
            },
            yAxis: {
                title: {
                    text: 'Callers in Queue'
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            series: [{
                id: 'sizeData',
                name: 'Size Data',
                data: sizeStack
            }]
        });

        waitChart = new Highcharts.Chart({
            chart: {
                renderTo: 'waitChart',
                type: 'spline',
            },
            title: null,
            xAxis: {
                type: 'datetime',
                tickPixelInterval: 150
            },
            yAxis: {
                title: {
                    text: 'Average Time in Queue (in seconds)'
                },
                plotLines: [{
                    value: 0,
                    width: 1,
                    color: '#808080'
                }]
            },
            series: [{
                id: 'waitData',
                name: 'Wait Data',
                data: waitStack
            }]
        });

        $('#waitChart .highcharts-legend').hide();
        $('#sizeChart .highcharts-legend').hide();

        sizeStack.push({
            x: (new Date()).getTime(),
            y: 0
        });
        sizeChart.get('sizeData').setData(sizeStack);

        waitStack.push({
            x: (new Date()).getTime(),
            y: 0
        });
        waitChart.get('waitData').setData(waitStack);
    });
</script>
}

<div class="row">
    <div class="col-md-12">
        <p>Give it a try.  Call <strong>1-314-403-7634</strong> to be placed in the queue.</p>
        <p>From the UK, you can dial <strong>+44 020 3322 3082</strong></p>
    </div>
</div>
<div class="row">
    <div class="col-md-6" style="text-align:center"><h1>Queue Size: <span id="currentSize">0</span></h1></div>
    <div class="col-md-6" style="text-align:center"><h1>Average Wait: <span id="waitTime">0</span></h1></div>
</div>

<div class="row">
    <div class="col-md-6" id="sizeChart" style="height: 400px"></div>
    <div class="col-md-6" id="waitChart" style="height: 400px"></div>
</div>

<div class="row">
    <div class="col-md-6" style="text-align:center"></div>
    <div class="col-md-6" style="text-align:center"><span id="waitTimeStatus">fetching latest wait time...</span></div>
</div>




